<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\Post;
use App\Models\CatPost;

class BlogModuleSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $this->command->info('üöÄ B·∫Øt ƒë·∫ßu t·∫°o d·ªØ li·ªáu m·∫´u cho Blog Module...');

        // T·∫°o categories n·∫øu ch∆∞a c√≥
        $this->createCategories();

        // T·∫°o posts m·∫´u
        $this->createSamplePosts();

        $this->command->info('üéâ Ho√†n th√†nh t·∫°o d·ªØ li·ªáu m·∫´u Blog Module!');
    }

    /**
     * T·∫°o categories m·∫´u
     */
    private function createCategories()
    {
        $categories = [
            [
                'name' => 'Tin t·ª©c',
                'slug' => 'tin-tuc',
                'description' => 'Tin t·ª©c v√† c·∫≠p nh·∫≠t m·ªõi nh·∫•t',
                'status' => 'active',
                'order' => 1
            ],
            [
                'name' => 'H∆∞·ªõng d·∫´n',
                'slug' => 'huong-dan',
                'description' => 'C√°c b√†i h∆∞·ªõng d·∫´n chi ti·∫øt',
                'status' => 'active',
                'order' => 2
            ],
            [
                'name' => 'Kinh nghi·ªám',
                'slug' => 'kinh-nghiem',
                'description' => 'Chia s·∫ª kinh nghi·ªám th·ª±c t·∫ø',
                'status' => 'active',
                'order' => 3
            ],
            [
                'name' => 'Ch√≠nh s√°ch',
                'slug' => 'chinh-sach',
                'description' => 'C√°c ch√≠nh s√°ch v√† quy ƒë·ªãnh',
                'status' => 'active',
                'order' => 4
            ]
        ];

        foreach ($categories as $categoryData) {
            CatPost::firstOrCreate(
                ['slug' => $categoryData['slug']],
                $categoryData
            );
        }

        $this->command->info('‚úÖ ƒê√£ t·∫°o ' . count($categories) . ' categories');
    }

    /**
     * T·∫°o posts m·∫´u
     */
    private function createSamplePosts()
    {
        $categories = CatPost::all();

        if ($categories->isEmpty()) {
            $this->command->warn('‚ö†Ô∏è Kh√¥ng c√≥ categories ƒë·ªÉ t·∫°o posts');
            return;
        }

        $posts = [
            // Tin t·ª©c
            [
                'title' => 'C·∫≠p nh·∫≠t t√≠nh nƒÉng m·ªõi trong h·ªá th·ªëng',
                'slug' => 'cap-nhat-tinh-nang-moi-trong-he-thong',
                'content' => $this->getNewsContent(),
                'excerpt' => 'H·ªá th·ªëng v·ª´a ƒë∆∞·ª£c c·∫≠p nh·∫≠t v·ªõi nhi·ªÅu t√≠nh nƒÉng m·ªõi gi√∫p c·∫£i thi·ªán tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.',
                'post_type' => 'news',
                'author_name' => 'Admin',
                'tags' => ['c·∫≠p nh·∫≠t', 't√≠nh nƒÉng', 'h·ªá th·ªëng'],
                'is_featured' => true,
                'status' => 'active',
                'published_at' => now()->subDays(1),
                'view_count' => rand(50, 200)
            ],
            [
                'title' => 'Th√¥ng b√°o b·∫£o tr√¨ h·ªá th·ªëng ƒë·ªãnh k·ª≥',
                'slug' => 'thong-bao-bao-tri-he-thong-dinh-ky',
                'content' => $this->getMaintenanceContent(),
                'excerpt' => 'H·ªá th·ªëng s·∫Ω ƒë∆∞·ª£c b·∫£o tr√¨ ƒë·ªãnh k·ª≥ v√†o cu·ªëi tu·∫ßn ƒë·ªÉ ƒë·∫£m b·∫£o hi·ªáu su·∫•t t·ªëi ∆∞u.',
                'post_type' => 'news',
                'author_name' => 'K·ªπ thu·∫≠t',
                'tags' => ['b·∫£o tr√¨', 'th√¥ng b√°o', 'h·ªá th·ªëng'],
                'is_featured' => false,
                'status' => 'active',
                'published_at' => now()->subDays(3),
                'view_count' => rand(30, 100)
            ],
            // H∆∞·ªõng d·∫´n
            [
                'title' => 'H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng t√≠nh nƒÉng t√¨m ki·∫øm n√¢ng cao',
                'slug' => 'huong-dan-su-dung-tinh-nang-tim-kiem-nang-cao',
                'content' => $this->getGuideContent(),
                'excerpt' => 'T√¨m hi·ªÉu c√°ch s·ª≠ d·ª•ng t√≠nh nƒÉng t√¨m ki·∫øm n√¢ng cao ƒë·ªÉ t√¨m th√¥ng tin nhanh ch√≥ng v√† ch√≠nh x√°c.',
                'post_type' => 'blog',
                'author_name' => 'H·ªó tr·ª£',
                'tags' => ['h∆∞·ªõng d·∫´n', 't√¨m ki·∫øm', 'tips'],
                'is_featured' => true,
                'status' => 'active',
                'published_at' => now()->subDays(5),
                'view_count' => rand(100, 300)
            ],
            [
                'title' => 'C√°ch t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t l√†m vi·ªác',
                'slug' => 'cach-toi-uu-hoa-hieu-suat-lam-viec',
                'content' => $this->getProductivityContent(),
                'excerpt' => 'Nh·ªØng m·∫πo v√† th·ªß thu·∫≠t gi√∫p b·∫°n l√†m vi·ªác hi·ªáu qu·∫£ h∆°n v·ªõi h·ªá th·ªëng.',
                'post_type' => 'blog',
                'author_name' => 'Chuy√™n gia',
                'tags' => ['hi·ªáu su·∫•t', 't·ªëi ∆∞u', 'l√†m vi·ªác'],
                'is_featured' => false,
                'status' => 'active',
                'published_at' => now()->subWeek(),
                'view_count' => rand(80, 250)
            ],
            // Ch√≠nh s√°ch
            [
                'title' => 'Ch√≠nh s√°ch b·∫£o m·∫≠t th√¥ng tin',
                'slug' => 'chinh-sach-bao-mat-thong-tin',
                'content' => $this->getPolicyContent(),
                'excerpt' => 'Quy ƒë·ªãnh v·ªÅ b·∫£o m·∫≠t v√† x·ª≠ l√Ω th√¥ng tin c√° nh√¢n trong h·ªá th·ªëng.',
                'post_type' => 'policy',
                'author_name' => 'Ph√°p ch·∫ø',
                'tags' => ['ch√≠nh s√°ch', 'b·∫£o m·∫≠t', 'quy ƒë·ªãnh'],
                'is_featured' => false,
                'status' => 'active',
                'published_at' => now()->subWeeks(2),
                'view_count' => rand(20, 80)
            ]
        ];

        foreach ($posts as $postData) {
            // G√°n category ng·∫´u nhi√™n ph√π h·ª£p
            $category = $this->getCategoryForPostType($postData['post_type'], $categories);
            $postData['category_id'] = $category->id;

            Post::firstOrCreate(
                ['slug' => $postData['slug']],
                $postData
            );
        }

        $this->command->info('‚úÖ ƒê√£ t·∫°o ' . count($posts) . ' posts m·∫´u');
    }

    /**
     * L·∫•y category ph√π h·ª£p cho post type
     */
    private function getCategoryForPostType(string $postType, $categories)
    {
        switch ($postType) {
            case 'news':
                return $categories->where('slug', 'tin-tuc')->first() ?? $categories->first();
            case 'policy':
                return $categories->where('slug', 'chinh-sach')->first() ?? $categories->first();
            case 'blog':
            default:
                return $categories->where('slug', 'huong-dan')->first() ?? $categories->first();
        }
    }

    /**
     * Content cho tin t·ª©c
     */
    private function getNewsContent(): string
    {
        return '<h2>T√≠nh nƒÉng m·ªõi ƒë∆∞·ª£c c·∫≠p nh·∫≠t</h2>
        <p>Ch√∫ng t√¥i vui m·ª´ng th√¥ng b√°o v·ªÅ vi·ªác c·∫≠p nh·∫≠t h·ªá th·ªëng v·ªõi nhi·ªÅu t√≠nh nƒÉng m·ªõi nh·∫±m c·∫£i thi·ªán tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.</p>

        <h3>C√°c t√≠nh nƒÉng ch√≠nh:</h3>
        <ul>
            <li><strong>Giao di·ªán ng∆∞·ªùi d√πng ƒë∆∞·ª£c c·∫£i thi·ªán:</strong> Thi·∫øt k·∫ø m·ªõi hi·ªán ƒë·∫°i v√† th√¢n thi·ªán h∆°n</li>
            <li><strong>T·ªëc ƒë·ªô t·∫£i trang nhanh h∆°n:</strong> T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t l√™n ƒë·∫øn 40%</li>
            <li><strong>T√≠nh nƒÉng t√¨m ki·∫øm n√¢ng cao:</strong> K·∫øt qu·∫£ ch√≠nh x√°c v√† nhanh ch√≥ng h∆°n</li>
            <li><strong>H·ªó tr·ª£ ƒëa thi·∫øt b·ªã:</strong> T∆∞∆°ng th√≠ch ho√†n h·∫£o tr√™n mobile v√† tablet</li>
        </ul>

        <p>C·∫≠p nh·∫≠t n√†y s·∫Ω c√≥ hi·ªáu l·ª±c ngay l·∫≠p t·ª©c v√† kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn d·ªØ li·ªáu hi·ªán c√≥ c·ªßa b·∫°n.</p>';
    }

    /**
     * Content cho b·∫£o tr√¨
     */
    private function getMaintenanceContent(): string
    {
        return '<h2>L·ªãch b·∫£o tr√¨ h·ªá th·ªëng</h2>
        <p>ƒê·ªÉ ƒë·∫£m b·∫£o h·ªá th·ªëng ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh v√† hi·ªáu qu·∫£, ch√∫ng t√¥i s·∫Ω th·ª±c hi·ªán b·∫£o tr√¨ ƒë·ªãnh k·ª≥.</p>

        <h3>Th·ªùi gian b·∫£o tr√¨:</h3>
        <ul>
            <li><strong>Ng√†y:</strong> Ch·ªß nh·∫≠t h√†ng tu·∫ßn</li>
            <li><strong>Th·ªùi gian:</strong> 02:00 - 04:00 s√°ng</li>
            <li><strong>Th·ªùi l∆∞·ª£ng:</strong> Kho·∫£ng 2 gi·ªù</li>
        </ul>

        <h3>Nh·ªØng g√¨ s·∫Ω ƒë∆∞·ª£c th·ª±c hi·ªán:</h3>
        <ul>
            <li>C·∫≠p nh·∫≠t b·∫£o m·∫≠t h·ªá th·ªëng</li>
            <li>T·ªëi ∆∞u h√≥a c∆° s·ªü d·ªØ li·ªáu</li>
            <li>Ki·ªÉm tra v√† s·ª≠a l·ªói</li>
            <li>Backup d·ªØ li·ªáu</li>
        </ul>

        <p>Trong th·ªùi gian b·∫£o tr√¨, h·ªá th·ªëng c√≥ th·ªÉ t·∫°m th·ªùi kh√¥ng truy c·∫≠p ƒë∆∞·ª£c. Ch√∫ng t√¥i xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y.</p>';
    }

    /**
     * Content cho h∆∞·ªõng d·∫´n
     */
    private function getGuideContent(): string
    {
        return '<h2>H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng t√¨m ki·∫øm n√¢ng cao</h2>
        <p>T√≠nh nƒÉng t√¨m ki·∫øm n√¢ng cao gi√∫p b·∫°n t√¨m th√¥ng tin ch√≠nh x√°c v√† nhanh ch√≥ng h∆°n.</p>

        <h3>C√°ch s·ª≠ d·ª•ng:</h3>
        <ol>
            <li><strong>T√¨m ki·∫øm c∆° b·∫£n:</strong> Nh·∫≠p t·ª´ kh√≥a v√†o √¥ t√¨m ki·∫øm</li>
            <li><strong>T√¨m ki·∫øm theo c·ª•m t·ª´:</strong> ƒê·∫∑t c·ª•m t·ª´ trong d·∫•u ngo·∫∑c k√©p "c·ª•m t·ª´"</li>
            <li><strong>Lo·∫°i tr·ª´ t·ª´ kh√≥a:</strong> S·ª≠ d·ª•ng d·∫•u tr·ª´ -t·ª´_kh√≥a</li>
            <li><strong>T√¨m ki·∫øm theo danh m·ª•c:</strong> Ch·ªçn danh m·ª•c c·ª• th·ªÉ</li>
        </ol>

        <h3>M·∫πo t√¨m ki·∫øm hi·ªáu qu·∫£:</h3>
        <ul>
            <li>S·ª≠ d·ª•ng t·ª´ kh√≥a c·ª• th·ªÉ thay v√¨ chung chung</li>
            <li>K·∫øt h·ª£p nhi·ªÅu t·ª´ kh√≥a li√™n quan</li>
            <li>S·ª≠ d·ª•ng b·ªô l·ªçc ƒë·ªÉ thu h·∫πp k·∫øt qu·∫£</li>
            <li>Ki·ªÉm tra ch√≠nh t·∫£ tr∆∞·ªõc khi t√¨m ki·∫øm</li>
        </ul>';
    }

    /**
     * Content cho productivity
     */
    private function getProductivityContent(): string
    {
        return '<h2>T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t l√†m vi·ªác</h2>
        <p>Nh·ªØng m·∫πo v√† th·ªß thu·∫≠t gi√∫p b·∫°n l√†m vi·ªác hi·ªáu qu·∫£ h∆°n v·ªõi h·ªá th·ªëng.</p>

        <h3>C√°c m·∫πo h·ªØu √≠ch:</h3>
        <ul>
            <li><strong>S·ª≠ d·ª•ng ph√≠m t·∫Øt:</strong> H·ªçc c√°c ph√≠m t·∫Øt ƒë·ªÉ thao t√°c nhanh h∆°n</li>
            <li><strong>T·ªï ch·ª©c workspace:</strong> S·∫Øp x·∫øp kh√¥ng gian l√†m vi·ªác khoa h·ªçc</li>
            <li><strong>L·∫≠p k·∫ø ho·∫°ch:</strong> L√™n k·∫ø ho·∫°ch c√¥ng vi·ªác h√†ng ng√†y</li>
            <li><strong>T·∫≠n d·ª•ng automation:</strong> T·ª± ƒë·ªông h√≥a c√°c t√°c v·ª• l·∫∑p l·∫°i</li>
        </ul>

        <h3>C√¥ng c·ª• h·ªó tr·ª£:</h3>
        <ul>
            <li>Dashboard c√° nh√¢n ƒë·ªÉ theo d√µi ti·∫øn ƒë·ªô</li>
            <li>Notification ƒë·ªÉ nh·∫Øc nh·ªü c√¥ng vi·ªác</li>
            <li>Report t·ª± ƒë·ªông ƒë·ªÉ ƒë√°nh gi√° hi·ªáu su·∫•t</li>
            <li>Integration v·ªõi c√°c tool kh√°c</li>
        </ul>';
    }

    /**
     * Content cho policy
     */
    private function getPolicyContent(): string
    {
        return '<h2>Ch√≠nh s√°ch b·∫£o m·∫≠t th√¥ng tin</h2>
        <p>Quy ƒë·ªãnh v·ªÅ b·∫£o m·∫≠t v√† x·ª≠ l√Ω th√¥ng tin c√° nh√¢n trong h·ªá th·ªëng.</p>

        <h3>Nguy√™n t·∫Øc b·∫£o m·∫≠t:</h3>
        <ul>
            <li><strong>B·∫£o m·∫≠t d·ªØ li·ªáu:</strong> M·ªçi th√¥ng tin ƒë∆∞·ª£c m√£ h√≥a v√† b·∫£o v·ªá</li>
            <li><strong>Quy·ªÅn truy c·∫≠p:</strong> Ph√¢n quy·ªÅn r√µ r√†ng theo vai tr√≤</li>
            <li><strong>Audit log:</strong> Ghi l·∫°i m·ªçi ho·∫°t ƒë·ªông trong h·ªá th·ªëng</li>
            <li><strong>Backup ƒë·ªãnh k·ª≥:</strong> Sao l∆∞u d·ªØ li·ªáu th∆∞·ªùng xuy√™n</li>
        </ul>

        <h3>Tr√°ch nhi·ªám ng∆∞·ªùi d√πng:</h3>
        <ul>
            <li>B·∫£o m·∫≠t th√¥ng tin ƒëƒÉng nh·∫≠p</li>
            <li>Kh√¥ng chia s·∫ª t√†i kho·∫£n</li>
            <li>B√°o c√°o ngay khi ph√°t hi·ªán b·∫•t th∆∞·ªùng</li>
            <li>Tu√¢n th·ªß quy ƒë·ªãnh s·ª≠ d·ª•ng</li>
        </ul>

        <p>M·ªçi vi ph·∫°m v·ªÅ b·∫£o m·∫≠t s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω nghi√™m t√∫c theo quy ƒë·ªãnh.</p>';
    }
}
